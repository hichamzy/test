{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.lastKeyword = \"\";\n    this.lastPageSize = 5;\n    this.lastPageNumber = 0;\n    this.BaseURI = \"http://localhost:8888/INVENTORY-SERVICE/products\";\n  }\n  ngOnInit() {}\n  deleteProduct(productID) {\n    return this.httpClient.delete(`${this.BaseURI}/${productID}`);\n  }\n  addProduct(name, price, quantity) {\n    return this.httpClient.post(`${this.BaseURI}`, {\n      name: name,\n      price: price,\n      quantity: quantity\n    });\n  }\n  editProduct(id, name, price, quantity) {\n    return this.httpClient.put(`${this.BaseURI}/${id}`, {\n      name: name,\n      price: price,\n      quantity: quantity\n    });\n  }\n  getPageProductsByKeyword(keyword = this.lastKeyword, page = this.lastPageNumber, size = this.lastPageSize) {\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    this.lastKeyword = keyword;\n    return this.httpClient.get(`${this.BaseURI}/search/keyword?name=${keyword}&page=${page}&size=${size}`);\n  }\n  getProductById(id) {\n    return this.httpClient.get(`${this.BaseURI}/${id}`);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IALtB,gBAAW,GAAW,EAAE;IACxB,iBAAY,GAAW,CAAC;IACxB,mBAAc,GAAW,CAAC;IAE1B,YAAO,GAAG,kDAAkD;EACvB;EAC7CC,QAAQ,IAAU;EAEXC,aAAa,CAACC,SAAiB;IACpC,OAAO,IAAI,CAACH,UAAU,CAACI,MAAM,CAAO,GAAG,IAAI,CAACC,OAAO,IAAIF,SAAS,EAAE,CAAC;EACrE;EAEOG,UAAU,CACfC,IAAY,EACZC,KAAa,EACbC,QAAgB;IAEhB,OAAO,IAAI,CAACT,UAAU,CAACU,IAAI,CAAU,GAAG,IAAI,CAACL,OAAO,EAAE,EAAE;MACtDE,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;KACX,CAAC;EACJ;EAEOE,WAAW,CAChBC,EAAU,EACVL,IAAY,EACZC,KAAa,EACbC,QAAgB;IAEhB,OAAO,IAAI,CAACT,UAAU,CAACa,GAAG,CAAU,GAAG,IAAI,CAACR,OAAO,IAAIO,EAAE,EAAE,EAAE;MAC3DL,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;KACX,CAAC;EACJ;EAEOK,wBAAwB,CAC7BC,UAAkB,IAAI,CAACC,WAAW,EAClCC,OAAe,IAAI,CAACC,cAAc,EAClCC,OAAe,IAAI,CAACC,YAAY;IAEhC,IAAI,CAACF,cAAc,GAAGD,IAAI;IAC1B,IAAI,CAACG,YAAY,GAAGD,IAAI;IACxB,IAAI,CAACH,WAAW,GAAGD,OAAO;IAC1B,OAAO,IAAI,CAACf,UAAU,CAACqB,GAAG,CACxB,GAAG,IAAI,CAAChB,OAAO,wBAAwBU,OAAO,SAASE,IAAI,SAASE,IAAI,EAAE,CAC3E;EACH;EAEOG,cAAc,CAACV,EAAU;IAC9B,OAAO,IAAI,CAACZ,UAAU,CAACqB,GAAG,CAAU,GAAG,IAAI,CAAChB,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC9D;EAAC;qBArDUd,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAyB,SAAdzB,cAAc;IAAA0B,YAFb;EAAM","names":["ProductService","constructor","httpClient","ngOnInit","deleteProduct","productID","delete","BaseURI","addProduct","name","price","quantity","post","editProduct","id","put","getPageProductsByKeyword","keyword","lastKeyword","page","lastPageNumber","size","lastPageSize","get","getProductById","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\ecom-control-jee-main\\front\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Product, PageProduct } from \"./../model/product.model\";\nimport { Injectable, OnInit } from \"@angular/core\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { UUID } from \"angular2-uuid\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProductService implements OnInit {\n  private lastKeyword: string = \"\";\n  private lastPageSize: number = 5;\n  private lastPageNumber: number = 0;\n  private products!: Array<Product>;\n  private BaseURI = \"http://localhost:8888/INVENTORY-SERVICE/products\";\n  constructor(private httpClient: HttpClient) {}\n  ngOnInit(): void {}\n\n  public deleteProduct(productID: number): Observable<void> {\n    return this.httpClient.delete<void>(`${this.BaseURI}/${productID}`);\n  }\n\n  public addProduct(\n    name: string,\n    price: number,\n    quantity: number\n  ): Observable<Product> {\n    return this.httpClient.post<Product>(`${this.BaseURI}`, {\n      name: name,\n      price: price,\n      quantity: quantity,\n    });\n  }\n\n  public editProduct(\n    id: number,\n    name: string,\n    price: number,\n    quantity: number\n  ): Observable<Product> {\n    return this.httpClient.put<Product>(`${this.BaseURI}/${id}`, {\n      name: name,\n      price: price,\n      quantity: quantity,\n    });\n  }\n\n  public getPageProductsByKeyword(\n    keyword: string = this.lastKeyword,\n    page: number = this.lastPageNumber,\n    size: number = this.lastPageSize\n  ): Observable<PageProduct> {\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    this.lastKeyword = keyword;\n    return this.httpClient.get<PageProduct>(\n      `${this.BaseURI}/search/keyword?name=${keyword}&page=${page}&size=${size}`\n    );\n  }\n\n  public getProductById(id: number): Observable<Product> {\n    return this.httpClient.get<Product>(`${this.BaseURI}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}